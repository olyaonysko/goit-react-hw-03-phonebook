{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","Number","isNaN","toast","info","props","onSubmit","resetForm","this","form","label","type","input","placeholder","onChange","button","Component","ContactList","contacts","onDeleteContact","list","map","id","listItem","onClick","Filter","App","filter","addContact","contact","toLowerCase","includes","shortid","generate","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","length","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfefaa5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1POy9\",\"listItem\":\"ContactList_listItem__2QA-a\",\"button\":\"ContactList_button__1xuwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2DjtC\",\"input\":\"Filter_input__3dPBZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__305Y3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2PT8h\",\"label\":\"ContactForm_label__1RykP\",\"input\":\"ContactForm_input__UhuUX\",\"button\":\"ContactForm_button__3rVYU ContactForm_input__UhuUX\"};","import s from './Container.module.css';\nconst Container = ({ children }) => (\n  <div className={s.Container}>{children}</div>\n);\n\nexport default Container;\n","import { Component } from 'react';\nimport { toast } from 'react-toastify';\n\nimport s from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    if (!name || !number) {\n      toast.info('ðŸ‘º All fields must be filled!');\n      return;\n    }\n\n    if (Number.isNaN(+number)) {\n      toast.info('ðŸ‘º Telephone number must be numeric!');\n      return;\n    }\n\n    this.props.onSubmit(name, number);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={s.input}\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={s.input}\n            placeholder=\"Enter phone number\"\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={s.listItem}>\n        <p>\n          {name}: {number}\n        </p>\n        <button\n          type=\"button\"\n          className={s.button}\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    Find contacts by name\n    <input\n      type=\"text\"\n      className={s.input}\n      placeholder=\"Enter name\"\n      value={value}\n      onChange={({ currentTarget }) => onChange(currentTarget.value)}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    if (\n      contacts\n        .map(contact => contact.name.toLowerCase())\n        .includes(name.toLowerCase())\n    ) {\n      return toast.info(`ðŸ™„ ${name} is already in contacts!`);\n    } else {\n      const contact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n\n        {contacts.length > 1 && (\n          <Filter value={filter} onChange={this.changeFilter} />\n        )}\n\n        {contacts.length > 0 ? (\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        ) : (\n          <p>Your phonebook is empty. Add contact.</p>\n        )}\n        <ToastContainer autoClose={3000} />\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}